name: Handle Staging Pull Requests 2.0

on:
  pull_request:
    branches:
      - staging
    types:
      - closed

jobs:
  handle-staging-and-auto-merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch and Sync Staging
        run: |
          git fetch origin
          git checkout staging
          git pull origin staging # Đồng bộ staging với remote

      - name: Merge Changes into Staging
        run: |
          git fetch origin ${GITHUB_HEAD_REF}
          git merge --no-ff FETCH_HEAD
          git push origin staging

      - name: Create and Merge Pull Request from Staging to Main
        uses: actions/github-script@v6
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            const response = await octokit.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "[AUTO-PR] Staging to Main",
              head: "staging",
              base: "main",
              body: "This is an automated PR merging staging into main.",
            });

            // Merge the created Pull Request
            const prNumber = response.data.number;
            await octokit.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: "squash", // Có thể chọn 'merge' hoặc 'rebase'
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
